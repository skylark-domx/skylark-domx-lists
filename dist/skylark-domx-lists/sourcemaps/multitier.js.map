{"version":3,"sources":["multitier.js"],"names":["define","langx","$","lists","multitier","elm","options","itemSelector","mixin","classes","active","collapse","in","selectors","item","sublist","hasSublist","toggler","mode","levels","multiExpand","show","$el","hide","toggle","$items","activeClass","activeSelector","sublistSelector","togglerSelector","collapseClass","inClass","inSelector","has","find","on","e","$children","preventDefault","$clildren","this","closest","siblings","removeClass","children","toggleClass","filter","addClass","not"],"mappings":";;;;;;;AAAAA,QACC,gBACA,qBACA,WACC,SAASC,EAAMC,EAAEC,GA+ElB,OAAOA,EAAMC,UA9Eb,SAAmBC,EAAIC,GAkCpB,IAAIC,GAjCND,EAAUL,EAAMO,OACfC,SACCC,OAAS,SACTC,SAAW,WACXC,GAAK,MAGNC,WACCC,KAAO,KACPC,QAAU,KACVC,WAAa,WACbC,QAAU,QAGXC,KAAS,GAETC,OAAS,EAETC,aAAc,EAEdC,KAAO,SAASC,GACfA,EAAID,QAGLE,KAAO,SAASD,GACfA,EAAIC,QAGLC,OAAS,SAASF,GACjBA,EAAIE,WAEJlB,GAAQ,IAEmBO,UAAUC,KACjCW,EAASvB,EAAEK,EAAaF,GAExBqB,EAAcpB,EAAQG,QAAQC,OAC9BiB,EAAiB,IAAMD,EAIvBE,GAFUtB,EAAQY,KAEAZ,EAAQO,UAAUE,SACpCK,YAAcd,EAAQc,YACtBS,gBAAkBvB,EAAQO,UAAUI,QAEpCa,cAAgBxB,EAAQG,QAAQE,SAChCoB,QAAUzB,EAAQG,QAAQG,GAC1BoB,WAAa,IAAMD,QAEnBR,KAAOjB,EAAQiB,KACfC,OAASlB,EAAQkB,OAEpBC,EAAOQ,IAAIL,GAAiBM,KAAKL,iBAAiBM,GAAG,kBAAmB,SAASC,GAG5E,IAAIC,EAFJD,EAAEE,iBAIGlB,cAEDmB,UAAYrC,EAAEsC,MAAMC,QAAQlC,GAAcmC,WAAWC,YAAYjB,GAAakB,SAAShB,EAAgB,IAAItB,EAAQG,QAAQG,IACvHyB,GACHd,KAAKc,KAIVA,EAAYnC,EAAEsC,MAAMC,QAAQlC,GAAcsC,YAAYnB,GAAakB,SAAStC,EAAQO,UAAUE,WAE7FS,OAAOa,KAIZZ,EAAOqB,OAAOnB,GAAgBM,IAAIL,GAAiBgB,SAAShB,GAAiBmB,SAASjB,eAAeiB,SAAShB,SAC9GN,EAAOuB,IAAIrB,GAAgBM,IAAIL,GAAiBgB,SAAShB,GAAiBmB,SAASjB","file":"../multitier.js","sourcesContent":["define([\r\n\t\"skylark-langx\",\r\n\t\"skylark-domx-query\",\r\n\t\"./lists\"\r\n],function(langx,$,lists){\r\n\tfunction multitier(elm,options) {\r\n\t\toptions = langx.mixin({\r\n\t\t\tclasses : {\r\n\t\t\t\tactive : \"active\",\r\n\t\t\t\tcollapse : \"collapse\",\r\n\t\t\t\tin : \"in\",\r\n\t\t\t},\r\n\r\n\t\t\tselectors : {\r\n\t\t\t\titem : \"li\",                   // \".list-group-item\"\r\n\t\t\t\tsublist : \"ul\",  // \"> .list-group\"\r\n\t\t\t\thasSublist : \":has(ul)\",\r\n\t\t\t\ttoggler : \" > a\"\r\n\t\t\t},\r\n\r\n\t\t\tmode   : \"\",  // \"tree\" or \"accordion\" or \"popover\"\r\n\r\n\t\t\tlevels : 2,\r\n\r\n\t\t\tmultiExpand : false,\r\n\r\n\t\t\tshow : function($el) {\r\n\t\t\t\t$el.show();\r\n\t\t\t},\r\n\r\n\t\t\thide : function($el) {\r\n\t\t\t\t$el.hide();\r\n\t\t\t},\r\n\r\n\t\t\ttoggle : function($el) {\r\n\t\t\t\t$el.toggle();\r\n\t\t\t}\r\n\t\t},options,true);\r\n\r\n    var itemSelector = options.selectors.item,\r\n        $items = $(itemSelector,elm),\r\n\r\n        activeClass = options.classes.active,\r\n        activeSelector = \".\" + activeClass,\r\n\r\n\t\tmultitierMode = options.mode,\r\n\r\n        sublistSelector = options.selectors.sublist;           \r\n        multiExpand = options.multiExpand,\r\n        togglerSelector = options.selectors.toggler,\r\n\r\n        collapseClass = options.classes.collapse,\r\n        inClass = options.classes.in,\r\n        inSelector = \".\" + inClass,\r\n\r\n        hide = options.hide,\r\n        toggle = options.toggle;\r\n\r\n     $items.has(sublistSelector).find(togglerSelector).on(\"click.multitier\", function(e) {\r\n          e.preventDefault();\r\n\r\n          let $children;\r\n\r\n          if (!multiExpand) {\r\n              ///langx.scall($(this).closest(itemSelector).siblings().removeClass(\"active\").children(sublistSelector+\".in\").plugin(\"domx.toggles.collapse\"),\"hide\");\r\n              $clildren = $(this).closest(itemSelector).siblings().removeClass(activeClass).children(sublistSelector+\".\"+options.classes.in);\r\n              if ($children) {\r\n\t              hide($children);\r\n              }\r\n          }\r\n          //$(this).closest(itemSelector).toggleClass(activeClass).children(sublistSelector).plugin(\"domx.toggles.collapse\").toggle();\r\n          $children = $(this).closest(itemSelector).toggleClass(activeClass).children(options.selectors.sublist);\r\n          if ($children) {\r\n\t          toggle($children);\r\n\t      }\r\n      });\r\n\r\n      $items.filter(activeSelector).has(sublistSelector).children(sublistSelector).addClass(collapseClass).addClass(inClass);\r\n      $items.not(activeSelector).has(sublistSelector).children(sublistSelector).addClass(collapseClass);\r\n\r\n\r\n\t}\r\n\r\n\treturn lists.multitier = multitier\r\n});"]}